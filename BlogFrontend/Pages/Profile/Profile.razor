@page "/Profile"
@using BlogFrontend.Models
@using BlogFrontend.Providers
@using BlogFrontend.Services
@using Blazored.LocalStorage
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Authorization
@inject HttpClient HttpClient
@inject ILocalStorageService LocalStorage
@inject JwtAuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorageService

<div class="blog-page" style="color: #fff;">
    <Header OnSearchCompleted="HandleSearchCompleted" />
    <div class="menu" id="menu" data-first-topic-id="@firstTopicId">
        <div class="menu-content menu-items dragscroll">
            <a class="menu-item">Public</a>
            <a class="menu-item">About me</a>
        </div>
    </div>
    <div class="notifications-container">
        <div class="blog-list" id="blog-list">
            @if (blogs != null)
            {
                @foreach (var blog in blogs)
                {
                    <a href="blog/@blog.Id" class="blog-link">
                        <div class="blog-item">
                            <div class="content">
                                <div class="author">@blog.UserName</div>
                                <div class="title">@blog.Title</div>
                                <div class="date">@blog.CreationDate.ToShortDateString()</div>
                            </div>
                            <img class="blog-img" src="http://localhost:5149/api/Blog/Image/@blog.Id" alt="@blog.Title">
                        </div>
                    </a>
                }
            }
            else
            {
                <p>No blogs available for the topic: <span style="color: #9BD21C;">@selectedTopicName</span></p>
            }
        </div>
        <div class="notifications-right">
            <div class="user-profile-card">
                <img src="path_to_profile_image" class="user-profile-avatar" alt="Profile Avatar" />
                <h3>Barbara Matthews</h3>
                <p>Graphic and UI/UX designer</p>
                <div class="user-profile-stats">
                    <span>275 followers</span>
                    <span>345 following</span>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Guid UserId { get; set; }
    private List<Notification> notifications = new();
    private int? firstTopicId;
    private List<BlogDto> blogs = new();
    private string selectedTopicName;
    protected override async Task OnInitializedAsync()
    {
        var userIdString = await LocalStorageService.GetItemAsync<string>("userId");

        if (Guid.TryParse(userIdString, out var parsedUserId))
        {
            UserId = parsedUserId;
        }
        else
        {
            Console.Error.WriteLine("Invalid User ID format.");
        }
    }

    private async Task SetAuthorizationHeader()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "jwt");

        if (!string.IsNullOrEmpty(token))
        {
            token = token.Trim('"');
            HttpClient.DefaultRequestHeaders.Authorization =
                new AuthenticationHeaderValue("Bearer", token);
        }
    }

    private void HandleSearchCompleted(List<BlogDto> searchResults)
    {
        
    }
}
